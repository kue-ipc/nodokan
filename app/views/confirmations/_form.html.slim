- confirmation = init_confirmation(node)
= bootstrap_form_with model: confirmation,
  url: node_confirmation_path(node),
  data: { \
    turbo_frame: dom_id(node),
    controller: "node-confirmation",
    action: "turbo:submit-end->modal#close",
  } do |f|
  p
    = t("messages.node_confirmation")

  - question_count = 1
  = confirmation_question_radio_buttons(f, :existence, count: question_count,
    required: true)
  - question_count += 1
  .collapse data-node-confirmation-target="collapse"
    = confirmation_question_radio_buttons(f, :content, count: question_count)
    - question_count += 1

    - unless node.logical?
      - [:os_update, :app_update].each do |attr_name|
        = confirmation_question_radio_buttons(f, attr_name,
          count: question_count, excludes: ["unnecessary"])
        .collapse id="node-confirm-secured-#{attr_name}"
          .card
            .card-body.text-danger
              | 【高度な技術的判断】が必要な項目が選択されています。
              | この項目は、
              strong
                | セキュリティに関する知識を有する技術者が脆弱性が存在しないと総合的に判断した
              | 場合のみ選択できます。
              | 例えば、次のような場合の組み合わせです。
              ul
                li 最新ではないが、既知の脆弱性が無いバージョンを使用している。
                li 既知の脆弱性がある機能を無効化している。
                li 設定等により、既知の脆弱性を回避している。
                li 他の機器やソフトウェアによる保護機能等により、既知の脆弱性の影響を受けないようにしている。
                li その他の理由で、脆弱性が無いと判断できる。
        - question_count += 1

      = confirmation_question_radio_buttons(f, :software, count: question_count)
      - question_count += 1

      = confirmation_question_check_boxes(f, :security_hardware,
        count: question_count)
      - question_count += 1

      - if confirmation.security_software
        = confirmation_question_group(f, :security_software,
          count: question_count) do
          .row
            = f.fields_for :security_software,
              confirmation.security_software do |security_software_f|
              = security_software_f.hidden_field :os_category_id

              = security_software_f.collection_select :installation_method,
                t_enums(:installation_methods, SecuritySoftware,
                  keys: installation_methods(node)),
                :first, :second,
                {include_blank: "(未選択)", wrapper_class: "col-md-4"}

              = security_software_f.text_field :name,
                list: "confirmation_security_software_name-list",
                wrapper_class: "col-md-8", disabled: true

              = datalist_candidate :security_software, :name,
                security_softwares_path,
                parents: [:confirmation],
                order: {confirmations_count: "desc"},
                inputList: [:os_category_id, :installation_method],
                requiredInput: :installation_method,
                description: true,
                clear: true,
                locked: { \
                  name: :installation_method,
                  list: SecuritySoftware.conf_installation_methods \
                    .select { |_, v| v[:locked] }.keys,
                },
                required: { \
                  name: :installation_method,
                  list: SecuritySoftware.conf_installation_methods \
                    .select { |_, v| v[:required] }.keys,
                }

          small#confirmation_security_software_name-description.form-text.text-muted
        - question_count += 1

        - [:security_update, :security_scan].each do |attr_name|
          = confirmation_question_radio_buttons(f, attr_name,
            count: question_count)
          - question_count += 1
      - else
        p.text-danger
          | OS情報が登録されていないため、
          | セキュリティソフトウェアに関する確認ができません。
          | OS情報を登録後に再度確認作業を実施してください。
  = f.submit "確認終了", class: "btn btn-primary"
