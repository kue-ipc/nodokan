= turbo_frame_tag node, autoscroll: true,
  data: {autoscroll_block: "start", turbo_action: :advance} do
  = render "model_errors", model: node

  p = t("forms.common.required_input")

  = bootstrap_form_with model: node, data: {controller: "node"} do |f|
    .rounded.border.p-2.mb-2
      h4 = t("forms.node.base.title")
      .mb-2: small.text-muted = t("forms.node.base.help")
      .row
        .col-md-4
          = f.text_field :name, floating: true
        .col-md-3
          = f.text_field :hostname, pattern: "[0-9A-Za-z\\-]*", floating: true
        .col-md-5
          = f.text_field :domain, pattern: "[0-9A-Za-z\\-.]*", floating: true
      .row
        .col-md-2
          = f.collection_select :node_type, t_enums(:node_type, Node),
            :first, :second, {floating: true, data: {node_target: "node_type"}}
        .col-md-2
          = f.check_box :specific, readonly: !current_user.admin?,
            data: {node_target: "specific", action: "node#changeFlag"}
        .col-md-2
          = f.check_box :public, readonly: !current_user.admin?,
            data: {node_target: "public", action: "node#changeFlag"}
        .col-md-2
          = f.check_box :dns, readonly: !current_user.admin?,
            data: {node_target: "dns", action: "node#changeFlag"}

      .row data-node-target="messages"
      template data-node-target="messageTemplate"
        .col-12.form-text.message

      script#node-messages type="application/json"
        == {helps: t("messages.node_helps")}.to_json


      / - node_flag_attributes.each do |name|
      /   = tag.div class: {collapse: true, "#{name}-show": true,
      /     show: node.send(name),}
      /     .row: .col
      /       = badge_for(node, name)
      /       small.text-secondary< = t("enabled", scope: ["forms", "node", name])

    = tag.div class: {collapse: true, show: node.normal?},
      data: {node_target: "collapsePlace"}
      = render "form_place", form: f

    = tag.div class: {collapse: true, show: node.virtual?},
      data: {node_target: "collapseHost"}
      = render "form_host", form: f

    = tag.div class: {collapse: true, show: node.logical?},
      data: {node_target: "collapseComponents"}
      = render "form_components", form: f

    = tag.div class: {collapse: true, show: !node.logical?},
      data: {node_target: "collapseHardware"}
      = render "form_hardware", form: f

    = tag.div class: {collapse: true, show: !node.logical?},
      data: {node_target: "collapseOperatingSystem"}
      = render "form_operating_system", form: f

    = render "form_nics", form: f

    .rounded.border.p-2.mb-2
      = f.text_area :note, floating: true, class: "dobule-height"
      - if current_user.admin?
        .row
          .col-md-4
            = f.collection_select :user_id,
              User.order(:username).where(deleted: false),
              :id, :name, floating: true

    = f.submit class: "btn btn-primary"
    =< link_to t("actions.cancel"), node, class: "btn btn-dark",
      data: {turbo: node.id.present?}

  hr

  = render "help"
