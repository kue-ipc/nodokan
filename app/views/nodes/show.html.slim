- content_for :heading
  h1 端末情報

dl
  - if current_user.admin?
    = dt_dd_for @node, :user
  = dt_dd_for @node, :name
  = dt_dd_for @node, :fqdn
  = dt_dd_for @node, :place do |place|
    - if place&.name.present?
      = place.name
    - else
      .text-warning
        | 設置場所が未登録です。「編集」を押して設置場所を登録してください。
  = dt_dd_for @node, :hardware do |hardware|
    - if hardware
      - case hardware.device_type
      - when 'desktop'
        i.fas.fa-desktop
      - when 'laptop'
        i.fas.fa-laptop
      - when 'tablet'
        i.fas.fa-tablet-alt
      - when 'mobile'
        i.fas.fa-mobile-alt
      - when 'server'
        i.fas.fa-server
      - when 'appliance'
        i.fas.fa-hdd
      - when 'network'
        i.fas.fa-network-wired
      - when 'virtual'
        i.fas.fa-cloud
      - when 'other'
        i.fas.fa-blender-phone
      - when 'unknown'
        i.fas.fa-question-circle
      =< hardware.name
    - else
      .text-warning
        | 機器情報が未登録です。「編集」を押して機器情報を登録してください。
  = dt_dd_for @node, :operating_system do |operating_system|
    - if operating_system
      - case operating_system.os_category
      - when 'windows_client'
        i.fab.fa-windows
      - when 'windows_server'
        i.fab.fa-microsoft
      - when 'mac'
        i.fab.fa-apple
      - when 'apple'
        span.fa-stack style="font-size: 0.5em;"
          i.fas.fa-tablet.fa-stack-2x
          i.fab.fa-apple.fa-stack-1x.fa-inverse
      - when 'android'
        i.fab.fa-android
      - when 'linux'
        i.fab.fa-linux
      - when 'bsd'
        i.fab.fa-freebsd
      - when 'unix'
        i.fas.fa-university
      - when 'dedicated'
        i.fas.fa-compact-disc
      - when 'embedded'
        i.fas.fa-microchip
      - when 'other'
        i.fas.fa-blender-phone
      - when 'less'
        i.fas.fa-ghost
      - when 'unknown'
        i.fas.fa-question-circle
      =< operating_system.name
    - else
      .text-danger
        | OSが未登録です。「編集」を押してOSを登録してください。
  = dt_dd_for @node, :nics do |nics|
    - if nics.count.zero?
      .text-danger
        | NICが未登録です。「編集」を押してNICを登録してください。
    - else
      table.table.table-sm.mb-0
        thead
          tr
            th = Nic.human_attribute_name(:name)
            th = Nic.human_attribute_name(:interface_type)
            th = Nic.human_attribute_name(:mac_address)
            th = Nic.human_attribute_name(:network)
            th = Nic.human_attribute_name(:ipv4_config)
            th = Nic.human_attribute_name(:ipv4_address)
            th = Nic.human_attribute_name(:ipv6_config)
            th = Nic.human_attribute_name(:ipv6_address)
        tbody
          - nics.each do |nic|
            tr
              td = nic.name
              td = t(nic.interface_type, scope: 'activerecord.enums.interface_types')
              td = nic.mac_address
              td = nic.network&.name
              td = t(nic.ipv4_config, scope: 'activerecord.enums.ipv4_configs')
              td = nic.ipv4_address
              td = t(nic.ipv6_config, scope: 'activerecord.enums.ipv6_configs')
              td = nic.ipv6_address
  = dt_dd_for @node, :confirmation do |confirmation|
    - if confirmation&.confirmed_at.blank?
      i.fas.fa-times-circle.text-danger
      =< t(:unconfirmed, scope: :messages)
      .text-danger
        | 端末が未確認です。「確認」ボタンから確認を行ってください。
    - elsif confirmation.expiration <= Time.now
      i.fas.fa-times-circle.text-danger
      =< l(confirmation.confirmed_at.to_date, format: :long)
      =< t(:expired, scope: :messages)
      p.text-danger
        | 有効期限が切れました。「確認」ボタンをおして、端末の現状について確認を行ってください。
    - elsif !confirmation.approved
      i.fas.fa-exclamation-circle.text-warning
      =<> l(confirmation.confirmed_at.to_date, format: :long)
      | (
      = l(confirmation.expiration.to_date, format: :long)
      | まで)
      =< t(:unapproved, scope: :messages)
      .text-warning
        | 確認内容に問題または不明な部分があります。問題を解決後に、「確認」ボタンから確認を行ってください。
    - else
      i.fas.fa-exclamation-check.text-warning
      =<> l(confirmation.confirmed_at.to_date, format: :long)
      | (
      = l(confirmation.expiration.to_date, format: :long)
      | まで)
      =< t(:upproved, scope: :messages)
  = dt_dd_for @node, :note

p
  | 内容に問題がない場合は、「確認」ボタンから確認を行ってください。
  | 内容に間違いや不足がある場合は「編集」ボタンから編集を行ってください。

button.btn.btn-primary type="button" data-toggle="modal" data-target="#confirm-form-modal"
  = t(:confirm, scope: [:actions])
=<> link_to t(:edit, scope: [:actions]), edit_node_path(@node),
  class: 'btn btn-warning'
=<> link_to t(:destroy, scope: [:actions]), @node,
  data: { confirm: t(:corfirm_destroy, scope: [:messages]) }, method: :delete,
  class: 'btn btn-danger'
hr

p
  |
    端末のネットワーク設定は次のようにしてください。

- @node.nics.each do |nic|
  h3
    = t(nic.interface_type, scope: 'activerecord.enums.interface_types')
    | のネットワーク
  - if nic.name.present?
    | (
    = nic.name
    | )
  .row
    .col-md-6
      h4 IPv4
      dl.row.line
        dt.col-md-6 割り当て
        dd.col-md-6
          - case nic.ipv4_config
          - when 'dypanmic', 'reserved', 'link_local'
            | 自動
          - when 'static', 'manual'
            | 手動
          - when 'disabled'
            | 無効
        dt.col-md-6 = Nic.human_attribute_name(:ip_address)
        dd.col-md-6 = nic.ipv4_address.presence || raw('&nbsp;')
        dt.col-md-6 = Network.human_attribute_name(:netmask)
        dd.col-md-6 = nic.network.ipv4_netmask.presence || raw('&nbsp;')
        dt.col-md-6 = Network.human_attribute_name(:gateway)
        dd.col-md-6 = nic.network.ipv4_gateway.presence || raw('&nbsp;')
    .col-md-6
      h4 IPv6
      dl.row.line
        dt.col-md-6 割り当て
        dd.col-md-6
          - case nic.ipv6_config
          - when 'dypanmic', 'reserved', 'link_local'
            | 自動
          - when 'static', 'manual'
            | 手動
          - when 'disabled'
            | 無効
        dt.col-md-6 = Nic.human_attribute_name(:ip_address)
        dd.col-md-6 = nic.ipv6_address.presence || raw('&nbsp;')
        dt.col-md-6 = Network.human_attribute_name(:prefix_length)
        dd.col-md-6 = nic.network.ipv6_prefix_length.presence || raw('&nbsp;')
        dt.col-md-6 = Network.human_attribute_name(:gateway)
        dd.col-md-6 = nic.network.ipv6_gateway.presence || raw('&nbsp;')

hr
=< link_to t(:back, scope: [:actions]), nodes_path

= render 'confirm_form'

