- content_for :heading
  h1 端末情報

dl.row
  dt.col-md-5 = Node.human_attribute_name(:name)
  dd.col-md-5 = @node.name
  dt.col-md-5
  dd.col-md-5 = @node.note
  dt.col-md-5 = Node.human_attribute_name(:fqdn)
  dd.col-md-5
    - if @node.fqdn.present?
      = @node.fqdn
    - else
      .text-muted
        | (未入力)
  dt.col-md-5 = Node.human_attribute_name(:place)
  dd.col-md-5
    - if @node.place&.name.present?
      = @node.place.name
    - else
      .text-muted
        | (未入力)
  dt.col-md-5 = Node.human_attribute_name(:hardware)
  dd.col-md-5
    - if @node.hardware
      = @node.hardware.name
    - else
      .text-muted
        | (未入力)
  dt.col-md-5 = Node.human_attribute_name(:operating_system)
  dd.col-md-5
    - if @node.operating_system
      - case @node.operating_system.os_category
      - when 'windows_client'
        i.fab.fa-windows
      - when 'windowsn_server'
        i.fab.fa-microsoft
      - when 'mac'
        i.fab.fa-apple
      - when 'apple'
        i.fab.fa-apple
      - when 'android'
        i.fab.fa-android
      - when 'linux'
        i.fab.fa-linux
      - when 'bsd'
        i.fab.fa-freebsd
      =< @node.operating_system.name
    - else
      .text-muted
        | (未入力)

  dt.col-md-5 = Node.human_attribute_name(:nics)
  - @node.nics.each do |nic|
    dd.col-md-5
      => nic.mac_address
      => nic.ip_address
      | (
      = nic.network&.name
      | )

p
  | 内容に問題がない場合は、「確認」ボタンから確認を行ってください。
  | 内容に間違いがある場合は「編集」ボタンから編集を行ってください。

button.btn.btn-primary type="button" data-toggle="modal" data-target="#confirm-form-modal"
  = t(:confirm, scope: [:actions])
=<> link_to t(:edit, scope: [:actions]), edit_node_path(@node),
  class: 'btn btn-warning'
=<> link_to t(:destroy, scope: [:actions]), @node,
  data: { confirm: t(:corfirm_destroy, scope: [:messages]) }, method: :delete,
  class: 'btn btn-danger'
hr
=< link_to t(:back, scope: [:actions]), nodes_path

#confirm-form-modal.modal.fade tabindex="-1" role="dialog"
  .modal-dialog.modal-xl role="document"
    .modal-content
      .modal-header
        h5.modal-title 確認事項
        button.close type="button" data-dismiss="modal" aria-label="Close"
          span aria-hidden="true" &times;
      = bootstrap_form_for @confirmation do |f|
        .modal-body
          = f.hidden_field :user_id
          = f.hidden_field :node_id
          - question_count = 1
          p
            = t(:node_confirmation, scope: :messages)
          - attr_name = :existence
          = f.form_group attr_name, \
            label: { \
              text: tag.strong(t(:question_with_number, \
                scope: :messages, count: question_count)) + \
              tag.span(' ' + \
                t(attr_name, scope: [:messages, :node_confirm_questions])) \
            }, \
            help: t(attr_name, scope: [:messages, :node_confirm_helps], \
              default: nil) do
            - t_enums(Confirmation,
              attr_name.to_s.pluralize.intern).each do |message, value|
              = f.radio_button attr_name, value, label: message
          - question_count += 1
          .d-none
            a[id="node-confirm-collapse-link" class="btn btn-primary"
            role="button" aria-expanded="false"
            aria-controls="node-confirm-fields" data-toggle="collapse"
            href="#node-confirm-fields"]
            | 端末存在
          #node-confirm-fields.collapse
            - %i[content os_update app_update].each do |attr_name|
              = f.form_group attr_name, \
                label: { \
                  text: tag.strong(t(:question_with_number, \
                    scope: :messages, count: question_count)) + \
                  tag.span(' ' + \
                    t(attr_name, scope: [:messages, :node_confirm_questions])) \
                }, \
                help: raw(t(attr_name, scope: [:messages, :node_confirm_helps], \
                  default: nil)) do
                - t_enums(Confirmation,
                  attr_name.to_s.pluralize.intern).each do |message, value|
                  = f.radio_button attr_name, value, label: message
              - question_count += 1

            - if @confirmation.security_software
              - attr_name = :security_software
              = f.form_group attr_name, \
                label: { \
                  text: tag.strong(t(:question_with_number, \
                    scope: :messages, count: question_count)) + \
                  tag.span(' ' + \
                    t(attr_name, scope: [:messages, :node_confirm_questions])) \
                }, \
                help: raw(t(attr_name, scope: [:messages, :node_confirm_helps], \
                  default: nil)) do
                .form-row
                  = f.fields_for :security_software, \
                    @confirmation.security_software do |security_software_f|
                    = security_software_f.hidden_field :os_category
                    = security_software_f.select :state,
                      t_enums(SecuritySoftware, :states),
                      {include_blank: '(未選択)', wrapper: {class: 'col-md-4'}},
                      class: 'custom-select'
                    = security_software_f.text_field :name,
                      list: 'confirmation_security_software_name-list',
                      disabled: true,
                      wrapper: {class: 'col-md-8'}
                    - confirmation_security_software_name_params = { \
                        parent: 'confirmation',
                        name: 'security_software',
                        target: 'name',
                        order: {nodes_count: 'desc'},
                        inputList: ['os_category', 'state'],
                        url: '/security_software.json',
                        requiredInput: 'state',
                        description: true,
                      }
                    #confirmation_security_software_name-app.datalist-canadidaiton data-params=confirmation_security_software_name_params.to_json
              - question_count += 1
              - %i[security_update security_scan].each do |attr_name|
                = f.form_group attr_name, \
                  label: { \
                    text: tag.strong(t(:question_with_number, \
                      scope: :messages, count: question_count)) + \
                    tag.span(' ' + \
                      t(attr_name, scope: [:messages, :node_confirm_questions])) \
                  }, \
                  help: raw(t(attr_name, scope: [:messages, :node_confirm_helps], \
                    default: nil)) do
                  - t_enums(Confirmation,
                    attr_name.to_s.pluralize.intern).each do |message, value|
                    = f.radio_button attr_name, value, label: message
                - question_count += 1
            - else
              p
                | OS情報が登録されていないため、
                | セキュリティソフトウェアに関する確認ができません。
                | OS情報を登録後に再度確認作業を実施してください。
        .modal-footer
          = f.submit '確認終了', class: 'btn btn-primary'
          button.btn.btn-secondary data-dismiss="modal"
            | 確認せずに
            = t(:close, scope: [:do_actions])

= javascript_pack_tag 'datalist-candidation', 'data-turbolinks-track': 'reload'
= javascript_pack_tag 'node-confirm', 'data-turbolinks-track': 'reload'
