p 端末の操作（確認、変更、削除）を行う場合は、列をクリックしてください。

= paginate @nodes

table.table.table-hover.table-sm
  thead
    tr
      - if current_user.admin?
        th scope="col"
          = Node.human_attribute_name(:user)
          =< sort_link(:user)
      th scope="col"
        = Node.human_attribute_name(:name)
        =< sort_link(:name)
      th scope="col" = Node.human_attribute_name(:hostname)
        = Node.human_attribute_name(:hostname)
        =< sort_link(:hostname)
      th scope="col"
        = Node.human_attribute_name(:place)
        =< sort_link(:place)
      th scope="col"
        = Hardware.model_name.human
        =< sort_link(:hardware)
      th scope="col"
        = OperatingSystem.model_name.human
        =< sort_link(:operating_system)
      th scope="col"
        = Nic.human_attribute_name(:ipv4_address)
        =< sort_link(:ipv4_address)
      th scope="col"
        = Nic.human_attribute_name(:ipv6_address)
        =< sort_link(:ipv6_address)
      th scope="col"
        = Nic.human_attribute_name(:mac_address)
        =< sort_link(:mac_address)
      th scope="col"
        = Node.human_attribute_name(:confirmation)

  tbody
    - @nodes.each do |node|
      tr.clickable-row[
        data-href="#{node_path(node)}"
        data-contextmenu="contextmenu-node-#{node.id}"]
        - if current_user.admin?
          td.text-nowrap = node.user.username
        td
          = node.name
          - if node.virtual
            span.badge.badge-secondary.ml-1
              = Node.human_attribute_name(:virtual)
          - if node.specific
            span.badge.badge-warning.ml-1
              = Node.human_attribute_name(:specific)
          - if node.global
            span.badge.badge-danger.ml-1
              = Node.human_attribute_name(:global)
          - if node.public
            span.badge.badge-primary.ml-1
              = Node.human_attribute_name(:public)
          - if node.dns
            span.badge.badge-success.ml-1
              = Node.human_attribute_name(:dns)
        td = node.hostname
        td = node.place&.short_name
        td = node.hardware&.product_name
        td = node.operating_system&.name
        td.text-nowrap
          - node.nics.each do |nic|
            - if nic.ipv4_dynamic?
              = t_enum(:dynamic, :ipv4_configs)
            - else
              = span_value_for(nic.ipv4)
            br
        td.text-nowrap
          - node.nics.each do |nic|
            - if nic.ipv6_dynamic?
              = t_enum(:dynamic, :ipv6_configs)
            - else
              = span_value_for(nic.ipv6)
            br
        td.text-nowrap
          - node.nics.each do |nic|
            = nic.mac_address
            br
        td.text-nowrap
          - case node.confirmation&.status
          - when nil, :unconfirmed
            i.fas.fa-times-circle.text-danger
            span.text-danger = t(:unconfirmed, scope: :messages)
          - when :expired
            i.fas.fa-times-circle.text-danger
            span.text-danger = t(:expired, scope: :messages)
          - when :unapproved
            i.fas.fa-exclamation-triangle.text-warning
            span.text-warning = t(:unapproved, scope: :messages)
          - when :expire_soon
            i.fas.fa-exclamation-triangle.text-warning
            span.text-warning = t(:expire_soon, scope: :messages)
          - when :approved
            i.fas.fa-check.text-success
            span.text-success = t(:approved, scope: :messages)
- list_group_item_class = [ \
  'list-group-item',
  'list-group-item-action',
  'flex-fill',
  'text-nowrap',
]
- @nodes.each do |node|
  .context-menu id="contextmenu-node-#{node.id}"
    .list-group.list-group-horizontal
      = link_to t('actions.show'), node,
        class: list_group_item_class + ['bg-dark', 'text-white']
      = link_to t('actions.confirm'), node_path(node, anchor: 'confirm'),
        class: list_group_item_class + ['bg-primary', 'text-white']
      = link_to t('actions.edit'), edit_node_path(node),
        class: list_group_item_class + ['bg-warning', 'text-white']
      - if node.confirmation&.destroyable?
        = link_to t('actions.destroy'), node,
          data: { confirm: t('messages.corfirm_destroy_name', name: node.name) },
          method: :delete,
          class: list_group_item_class + ['bg-danger', 'text-white']

= javascript_pack_tag 'clickable-row', 'data-turbolinks-track': 'reload'

= paginate @nodes
p
  = page_entries_info @nodes

