- content_for :heading
  h2
    = Network.model_name.human

=<> link_to t('actions.index'), networks_path, class: 'btn btn-secondary'
- if current_user.admin?
  =<> link_to t('actions.edit'), edit_network_path(@network), class: 'btn btn-primary'
  =<> link_to t('actions.destroy'), @network, data: { confirm: t('messages.corfirm_destroy') }, method: :delete, class: 'btn btn-danger'
hr

dl
  = dt_dd_for @network, :name
  = dt_dd_for @network, :vlan
  = dt_dd_for @network, :auth
  = dt_dd_for @network, :ip_network
  = dt_dd_for @network, :ip_gateway
  = dt_dd_for @network, :ip6_network
  = dt_dd_for @network, :ip6_gateway
  = dt_dd_for @network, :note

  = dt_dd_tag '端末数' do
    span.badge.badge-primary
      = @network.nodes.count

  = dt_dd_tag '利用可能ユーザー数' do
    span.badge.badge-primary
      = @network.users.count

  = dt_dd_tag '認証ユーザー数' do
    span.badge.badge-primary
      = @network.auth_users.count

h3 = IpPool.model_name.human

- if @network.ip_pools.empty?
  p
    | IPアドレスのプールが設定されていません。
- else
  table.table.table-sm
    thead
      tr
        th = IpPool.human_attribute_name(:ip_config)
        th = IpPool.human_attribute_name(:ip_first_address)
        th = IpPool.human_attribute_name(:ip_last_address)
    tbody
      - @network.ip_pools.sort_by(&:ip_first_data).each do |ip_pool|
        tr
          td = t(ip_pool.ip_config, scope: [:activerecord, :enums, :ip_configs])
          td = ip_pool.ip_first_address
          td = ip_pool.ip_last_address
