- content_for :heading
  h2
    = Network.model_name.human

dl
  = dt_dd_for @network, :name do |value|
    = value
    - if @network.auth
      span.badge.badge-primary.ml-1
        = Network.human_attribute_name(:auth)
    - if @network.dhcp
      span.badge.badge-secondary.ml-1
        = Network.human_attribute_name(:dhcp)
    - if @network.locked
      span.badge.badge-dark.ml-1
        = Network.human_attribute_name(:locked)
    - if @network.specific
      span.badge.badge-danger.ml-1
        = Network.human_attribute_name(:specific)
  = dt_dd_for @network, :vlan
  = dt_dd_for @network, :ipv4_network
  = dt_dd_for @network, :ipv4_gateway
  = dt_dd_for @network, :ipv6_network
  = dt_dd_for @network, :ipv6_gateway
  = dt_dd_for @network, :note

  - if current_user.admin?
    = dt_dd_for @network, :auth_users
    = dt_dd_for @network, :use_users
    = dt_dd_for @network, :manage_users

  = dt_dd_for @network, :nodes do |value|
    = link_to nodes_path(condition: {network_id: @network.id}) do
      span.badge.badge-primary
        = value.count

- if current_user.admin?
  =<> link_to t('actions.index'), networks_path, class: 'btn btn-secondary'
  =<> link_to t('actions.edit'), edit_network_path(@network),
    class: 'btn btn-primary'
  =<> link_to t('actions.destroy'), @network,
    data: { confirm: t('messages.corfirm_destroy') }, method: :delete,
      class: 'btn btn-danger'
  hr



h3 = Ipv4Pool.model_name.human

- if @network.ipv4_pools.empty?
  p
    | IPアドレスのプールが設定されていません。
- else
  table.table.table-sm
    thead
      tr
        th = Ipv4Pool.human_attribute_name(:ipv4_config)
        th = Ipv4Pool.human_attribute_name(:ipv4_first_address)
        th = Ipv4Pool.human_attribute_name(:ipv4_last_address)
    tbody
      - @network.ipv4_pools.sort_by(&:ipv4_first_data).each do |ipv4_pool|
        tr
          td = t_enum(ipv4_pool.ipv4_config, :ipv4_configs)
          td = ipv4_pool.ipv4_first_address
          td = ipv4_pool.ipv4_last_address
