= turbo_frame_tag network, autoscroll: true,
  data: {autoscroll_block: "start", turbo_action: :advance} do
  dl
    = dt_dd_for network, :name do |value|
      = value
      - [:auth, :locked, :specific, :global].each do |attr|
        = badge_for(network, attr)
    = dt_dd_for network, :vlan
    = dt_dd_for network, :ipv4_network_prefix do |value|
      = span_value_for(value)
      = badge_for(network, :dhcp)
    = dt_dd_for network, :ipv4_gateway
    = dt_dd_for network, :ipv4_dns_servers, no_link: true,
      blank_alt: t("values.inherit")
    = dt_dd_for network, :ipv6_network_prefix do |value|
      = span_value_for(value)
      = badge_for(network, :ra)
    = dt_dd_for network, :ipv6_gateway
    = dt_dd_for network, :ipv6_dns_servers, no_link: true,
      blank_alt: t("values.inherit")
    = dt_dd_for network, :domain, no_link: true, blank_alt: t("values.inherit")
    = dt_dd_for network, :domain_search, no_link: true,
      blank_alt: t("values.inherit")
    = dt_dd_for network, :note, line_break: true

    - if current_user.admin?
      - if Settings.feature.user_auth_network
        = dt_dd_for network, :auth_users
      = dt_dd_for network, :use_users
      = dt_dd_for network, :manage_users

    = dt_dd_for network, :nodes do |value|
      = link_to nodes_path(condition: {nics_network_id: network.id}),
        data: {turbo: false} do
        span.badge.bg-primary
          = value.count

  - if current_user.admin?
    =<> link_to t("actions.edit"), edit_network_path(network),
      class: "btn btn-primary"
    =<> button_to t("actions.destroy"), network,
      data: {turbo_confirm: t("messages.confirm_destroy"), turbo: false},
      method: :delete,
      class: "btn btn-danger"
    hr

  h3 = Ipv4Pool.model_name.human

  - if network.ipv4_pools.empty?
    p
      | IPv4アドレスのプールが設定されていません。
  - else
    table.table.table-sm
      thead
        tr
          th = Ipv4Pool.human_attribute_name(:ipv4_config)
          th = Ipv4Pool.human_attribute_name(:ipv4_first_address)
          th = Ipv4Pool.human_attribute_name(:ipv4_last_address)
      tbody
        - network.ipv4_pools.each do |ipv4_pool|
          tr
            td = t_enum(ipv4_pool.ipv4_config, :ipv4_config)
            td = ipv4_pool.ipv4_first_address
            td = ipv4_pool.ipv4_last_address

  h3 = Ipv6Pool.model_name.human

  - if network.ipv6_pools.empty?
    p
      | IPv6アドレスのプールが設定されていません。
  - else
    table.table.table-sm
      thead
        tr
          th = Ipv6Pool.human_attribute_name(:ipv6_config)
          th = Ipv6Pool.human_attribute_name(:ipv6_first_address)
          th = Ipv6Pool.human_attribute_name(:ipv6_last_address)
      tbody
        - network.ipv6_pools.each do |ipv6_pool|
          tr
            td = t_enum(ipv6_pool.ipv6_config, :ipv6_config)
            td = ipv6_pool.ipv6_first_address
            td = ipv6_pool.ipv6_last_address
